version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0-alpine
    container_name: quizzer-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password123}
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME:-quizzer}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - quizzer-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: quizzer-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis123}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - quizzer-network

  # AI Service
  ai-service:
    build:
      context: ../../services/ai-service
      dockerfile: Dockerfile
    container_name: quizzer-ai-service
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      MONGO_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password123}@mongodb:27017/${MONGO_DB_NAME:-quizzer}?authSource=admin
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      GROQ_API_KEY: ${GROQ_API_KEY}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-key-change-in-production}
    ports:
      - "3001:3001"
    depends_on:
      - mongodb
      - redis
    networks:
      - quizzer-network

  # Quiz Service
  quiz-service:
    build:
      context: ../../services/quiz-service
      dockerfile: Dockerfile
    container_name: quizzer-quiz-service
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3002
      MONGO_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password123}@mongodb:27017/${MONGO_DB_NAME:-quizzer}?authSource=admin
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379
      AI_SERVICE_URL: http://ai-service:3001
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-key-change-in-production}
    ports:
      - "3002:3002"
    depends_on:
      - mongodb
      - redis
      - ai-service
    networks:
      - quizzer-network

  # Auth Service
  auth-service:
    build:
      context: ../../services/auth-service
      dockerfile: Dockerfile
    container_name: quizzer-auth-service
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3003
      MONGO_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password123}@mongodb:27017/${MONGO_DB_NAME:-quizzer}?authSource=admin
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-key-change-in-production}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
    ports:
      - "3003:3003"
    depends_on:
      - mongodb
      - redis
    networks:
      - quizzer-network

  # Analytics Service
  analytics-service:
    build:
      context: ../../services/analytics-service
      dockerfile: Dockerfile
    container_name: quizzer-analytics-service
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3004
      MONGO_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password123}@mongodb:27017/${MONGO_DB_NAME:-quizzer}?authSource=admin
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-key-change-in-production}
    ports:
      - "3004:3004"
    depends_on:
      - mongodb
      - redis
    networks:
      - quizzer-network

  # Submission Service
  submission-service:
    build:
      context: ../../services/submission-service
      dockerfile: Dockerfile
    container_name: quizzer-submission-service
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3005
      MONGO_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password123}@mongodb:27017/${MONGO_DB_NAME:-quizzer}?authSource=admin
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379
      QUIZ_SERVICE_URL: http://quiz-service:3002
      AI_SERVICE_URL: http://ai-service:3001
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-key-change-in-production}
    ports:
      - "3005:3005"
    depends_on:
      - mongodb
      - redis
      - quiz-service
      - ai-service
    networks:
      - quizzer-network

  # NGINX Load Balancer
  nginx:
    image: nginx:alpine
    container_name: quizzer-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - ai-service
      - quiz-service
      - auth-service
      - analytics-service
      - submission-service
    networks:
      - quizzer-network

networks:
  quizzer-network:
    driver: bridge

volumes:
  mongodb_data:
  mongodb_config:
  redis_data:
