name: Deploy to Azure Container Instances

on:
  push:
    branches: [ microservices ]
  pull_request:
    branches: [ microservices ]

env:
  AZURE_RESOURCE_GROUP: quizzer-rg
  AZURE_LOCATION: eastus
  CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY_NAME }}
  IMAGE_TAG: ${{ github.sha }}
  WEBAPP_PLAN: quizzer-free-plan
  
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'yarn'
        
    - name: Install dependencies
      run: yarn install --frozen-lockfile
      
    - name: Build all services
      run: yarn build
      
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Login to Azure Container Registry
      run: |
        az acr login --name ${{ env.CONTAINER_REGISTRY }}
        
    - name: Clean up existing containers (ignore failures)
      run: |
        az container delete --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name ai-service --yes || true
        az container delete --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name analytics-service --yes || true
        az container delete --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name auth-service --yes || true
        az container delete --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name quiz-service --yes || true
        az container delete --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name submission-service --yes || true
        
    - name: Build and push AI Service image
      run: |
        docker build -t ${{ env.CONTAINER_REGISTRY }}.azurecr.io/ai-service:${{ env.IMAGE_TAG }} \
          -f services/ai-service/Dockerfile services/ai-service
        docker push ${{ env.CONTAINER_REGISTRY }}.azurecr.io/ai-service:${{ env.IMAGE_TAG }}
        
    - name: Build and push Analytics Service image
      run: |
        docker build -t ${{ env.CONTAINER_REGISTRY }}.azurecr.io/analytics-service:${{ env.IMAGE_TAG }} \
          -f services/analytics-service/Dockerfile services/analytics-service
        docker push ${{ env.CONTAINER_REGISTRY }}.azurecr.io/analytics-service:${{ env.IMAGE_TAG }}
        
    - name: Build and push Auth Service image
      run: |
        docker build -t ${{ env.CONTAINER_REGISTRY }}.azurecr.io/auth-service:${{ env.IMAGE_TAG }} \
          -f services/auth-service/Dockerfile services/auth-service
        docker push ${{ env.CONTAINER_REGISTRY }}.azurecr.io/auth-service:${{ env.IMAGE_TAG }}
        
    - name: Build and push Quiz Service image
      run: |
        docker build -t ${{ env.CONTAINER_REGISTRY }}.azurecr.io/quiz-service:${{ env.IMAGE_TAG }} \
          -f services/quiz-service/Dockerfile services/quiz-service
        docker push ${{ env.CONTAINER_REGISTRY }}.azurecr.io/quiz-service:${{ env.IMAGE_TAG }}
        
    - name: Build and push Submission Service image
      run: |
        docker build -t ${{ env.CONTAINER_REGISTRY }}.azurecr.io/submission-service:${{ env.IMAGE_TAG }} \
          -f services/submission-service/Dockerfile services/submission-service
        docker push ${{ env.CONTAINER_REGISTRY }}.azurecr.io/submission-service:${{ env.IMAGE_TAG }}
        
    - name: Deploy AI Service to Azure Container Instances
      run: |
        az container create \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --name ai-service \
          --dns-name-label quizzer-ai-service \
          --image ${{ env.CONTAINER_REGISTRY }}.azurecr.io/ai-service:${{ env.IMAGE_TAG }} \
          --registry-login-server ${{ env.CONTAINER_REGISTRY }}.azurecr.io \
          --registry-username ${{ secrets.REGISTRY_USERNAME }} \
          --registry-password ${{ secrets.REGISTRY_PASSWORD }} \
          --os-type Linux \
          --ports 80 3003\
          --ip-address public \
          --cpu 0.5 \
          --memory 1.0 \
          --environment-variables \
            NODE_ENV=production \
            MONGODB_URI='${{ secrets.MONGODB_URI }}' \
            REDIS_URL='${{ secrets.REDIS_URL }}' \
            JWT_SECRET='${{ secrets.JWT_SECRET }}' \
            GROQ_API_KEY='${{ secrets.GROQ_API_KEY }}' \
            GROQ_MODEL='${{ secrets.GROQ_MODEL }}' \
            GEMINI_API_KEY='${{ secrets.GEMINI_API_KEY }}' \
            GEMINI_MODEL='${{ secrets.GEMINI_MODEL }}' \
            AUTH_SERVICE_URL='http://quizzer-auth-service.eastus.azurecontainer.io' \
            QUIZ_SERVICE_URL='http://quizzer-quiz-service.eastus.azurecontainer.io' \
          --restart-policy Always
          
    - name: Deploy Analytics Service to Azure Container Instances
      run: |
        az container create \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --name analytics-service \
          --dns-name-label quizzer-analytics-service \
          --image ${{ env.CONTAINER_REGISTRY }}.azurecr.io/analytics-service:${{ env.IMAGE_TAG }} \
          --registry-login-server ${{ env.CONTAINER_REGISTRY }}.azurecr.io \
          --registry-username ${{ secrets.REGISTRY_USERNAME }} \
          --registry-password ${{ secrets.REGISTRY_PASSWORD }} \
          --os-type Linux \
          --ports 80 3005\
          --ip-address public \
          --cpu 0.5 \
          --memory 1.0 \
          --environment-variables \
            NODE_ENV=production \
            MONGODB_URI='${{ secrets.MONGODB_URI }}' \
            REDIS_URL='${{ secrets.REDIS_URL }}' \
            JWT_SECRET='${{ secrets.JWT_SECRET }}' \
            AUTH_SERVICE_URL='http://quizzer-auth-service.eastus.azurecontainer.io' \
            SUBMISSION_SERVICE_URL='http://quizzer-submission-service.eastus.azurecontainer.io' \
          --restart-policy Always
          
    - name: Deploy Auth Service to Azure Container Instances
      run: |
        az container create \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --name auth-service \
          --dns-name-label quizzer-auth-service \
          --image ${{ env.CONTAINER_REGISTRY }}.azurecr.io/auth-service:${{ env.IMAGE_TAG }} \
          --registry-login-server ${{ env.CONTAINER_REGISTRY }}.azurecr.io \
          --registry-username ${{ secrets.REGISTRY_USERNAME }} \
          --registry-password ${{ secrets.REGISTRY_PASSWORD }} \
          --os-type Linux \
          --ports 80 3001\
          --ip-address public \
          --cpu 0.5 \
          --memory 1.0 \
          --environment-variables \
            NODE_ENV=production \
            MONGODB_URI='${{ secrets.MONGODB_URI }}' \
            REDIS_URL='${{ secrets.REDIS_URL }}' \
            JWT_SECRET='${{ secrets.JWT_SECRET }}' \
            EMAIL_USER='${{ secrets.EMAIL_USER }}' \
            EMAIL_PASSWORD='${{ secrets.EMAIL_PASSWORD }}' \
          --restart-policy Always
          
    - name: Deploy Quiz Service to Azure Container Instances
      run: |
        az container create \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --name quiz-service \
          --dns-name-label quizzer-quiz-service \
          --image ${{ env.CONTAINER_REGISTRY }}.azurecr.io/quiz-service:${{ env.IMAGE_TAG }} \
          --registry-login-server ${{ env.CONTAINER_REGISTRY }}.azurecr.io \
          --registry-username ${{ secrets.REGISTRY_USERNAME }} \
          --registry-password ${{ secrets.REGISTRY_PASSWORD }} \
          --os-type Linux \
          --ports 80 3002\
          --ip-address public \
          --cpu 0.5 \
          --memory 1.0 \
          --environment-variables \
            NODE_ENV=production \
            MONGODB_URI='${{ secrets.MONGODB_URI }}' \
            REDIS_URL='${{ secrets.REDIS_URL }}' \
            JWT_SECRET='${{ secrets.JWT_SECRET }}' \
            AUTH_SERVICE_URL='http://quizzer-auth-service.eastus.azurecontainer.io' \
            AI_SERVICE_URL='http://quizzer-ai-service.eastus.azurecontainer.io' \
            ANALYTICS_SERVICE_URL='http://quizzer-analytics-service.eastus.azurecontainer.io' \
            SUBMISSION_SERVICE_URL='http://quizzer-submission-service.eastus.azurecontainer.io' \
          --restart-policy Always
          
    - name: Deploy Submission Service to Azure Container Instances
      run: |
        az container create \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --name submission-service \
          --dns-name-label quizzer-submission-service \
          --image ${{ env.CONTAINER_REGISTRY }}.azurecr.io/submission-service:${{ env.IMAGE_TAG }} \
          --registry-login-server ${{ env.CONTAINER_REGISTRY }}.azurecr.io \
          --registry-username ${{ secrets.REGISTRY_USERNAME }} \
          --registry-password ${{ secrets.REGISTRY_PASSWORD }} \
          --os-type Linux \
          --ports 80 3004\
          --ip-address public \
          --cpu 0.5 \
          --memory 1.0 \
          --environment-variables \
            NODE_ENV=production \
            MONGODB_URI='${{ secrets.MONGODB_URI }}' \
            REDIS_URL='${{ secrets.REDIS_URL }}' \
            JWT_SECRET='${{ secrets.JWT_SECRET }}' \
            AUTH_SERVICE_URL='http://quizzer-auth-service.eastus.azurecontainer.io' \
            QUIZ_SERVICE_URL='http://quizzer-quiz-service.eastus.azurecontainer.io' \
            AI_SERVICE_URL='http://quizzer-ai-service.eastus.azurecontainer.io' \
          --restart-policy Always