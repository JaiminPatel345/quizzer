name: Deploy to Staging

on:
  push:
    branches:
      - develop
    paths:
      - 'services/**'
      - 'gateway/**'

env:
  AZURE_CONTAINER_REGISTRY: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
  RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP_STAGING }}
  CONTAINER_APP_ENVIRONMENT: ${{ secrets.AZURE_CONTAINER_APP_ENVIRONMENT_STAGING }}

jobs:
  deploy-all-to-staging:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [
          { name: 'auth-service', path: 'services/auth-service', port: 3001 },
          { name: 'quiz-service', path: 'services/quiz-service', port: 3002 },
          { name: 'ai-service', path: 'services/ai-service', port: 3003 },
          { name: 'analytics-service', path: 'services/analytics-service', port: 3004 },
          { name: 'submission-service', path: 'services/submission-service', port: 3005 }
        ]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: '${{ matrix.service.path }}/package-lock.json'

      - name: Install dependencies
        run: |
          cd ${{ matrix.service.path }}
          npm ci

      - name: Build TypeScript
        run: |
          cd ${{ matrix.service.path }}
          npm run build

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.AZURE_CONTAINER_REGISTRY }}
          username: ${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD }}

      - name: Build and push Docker image
        run: |
          cd ${{ matrix.service.path }}
          IMAGE_TAG=${{ env.AZURE_CONTAINER_REGISTRY }}/quizzer-${{ matrix.service.name }}:staging-${{ github.sha }}
          docker build -t $IMAGE_TAG .
          docker push $IMAGE_TAG

      - name: Deploy to Azure Container Apps (Staging)
        uses: azure/container-apps-deploy-action@v1
        with:
          appSourcePath: ${{ matrix.service.path }}
          acrName: ${{ secrets.AZURE_CONTAINER_REGISTRY_NAME }}
          containerAppName: quizzer-${{ matrix.service.name }}-staging
          resourceGroup: ${{ env.RESOURCE_GROUP }}
          containerAppEnvironment: ${{ env.CONTAINER_APP_ENVIRONMENT }}
          targetPort: ${{ matrix.service.port }}
          ingress: external
          environmentVariables: |
            NODE_ENV=staging
            PORT=${{ matrix.service.port }}
            MONGODB_URI=${{ secrets.MONGODB_URI_STAGING }}
            REDIS_URL=${{ secrets.REDIS_URL_STAGING }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}
            GROQ_API_KEY=${{ secrets.GROQ_API_KEY }}
